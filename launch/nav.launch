<launch>
<!--   ebot -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ebot_description)/urdf/ebot.xacro'"/>

<!--   office world -->
	<include file="$(find covibot)/launch/hospital_world.launch" />
<!-- Lab world -->
<!--	<include file="$(find ebot_gazebo)/launch/lab_world.launch" /> -->

<!-- Argument for spawning location -->
	<arg name="x" default="0"/>
	<arg name="y" default="0"/>
	<arg name="z" default="0"/>

<!-- Spawn the robot model -->
	<node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
	    args="-urdf -param robot_description -model ebot -x $(arg x) -y $(arg y) -z $(arg z)" />

<!-- include your navigation launch file  -->
<node pkg="move_base" type="move_base" respawn="false" name="move_base">
  <rosparam file="$(find ebot_nav)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
  <rosparam file="$(find ebot_nav)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
  <rosparam file="$(find ebot_nav)/config/local_costmap_params.yaml" command="load" />
  <rosparam file="$(find ebot_nav)/config/global_costmap_params.yaml" command="load" />
  <!--rosparam file="$(find ebot_nav)/config/trajectory_planner.yaml" command="load" /-->
  <rosparam file="$(find ebot_nav)/config/base_local_planner_params.yaml" command="load" />
  <rosparam file="$(find ebot_nav)/config/dwa_local_planner_params.yaml" command="load" />
  <rosparam file="$(find ebot_nav)/config/move_base_params.yaml" command="load" />


  <param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="1.0"/>
  <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="1.0"/>
  <!--<param name="move_forward_only" value="false"/>-->


</node>


</launch>
